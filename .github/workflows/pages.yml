# Simple workflow for deploying static content to GitHub Pages
name: Deploy font status to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 0'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  KEEP_WEEK: 12

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout fontquery
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/fedora-i18n/fontquery
          cd fontquery
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install fontquery
        run: |
          pip install build wheel
          pushd fontquery
          python -m build
          pip install dist/fontquery*.whl
          popd
      - name: Install dependencies
        run: sudo apt install podman buildah curl
      - name: Get supported releases for Fedora
        id: fedora
        uses: ./fontquery/.github/actions/supported_releases
      - name: Get supported releases for CentOS
        id: centos
        uses: ./fontquery/.github/actions/centos_supported_releases
      - name: Clean up fontquery
        run: rm -rf fontquery
      - name: Set date
        id: date
        run: (echo -n "date=" && date +%Y%m%d) >> $GITHUB_OUTPUT
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          if_no_artifact_found: ignore
      - name: Copy old pages
        run: |
          pushd github-pages
          tar xvfa artifact.tar
          cp -a *-[0-9]*.html ..
          popd
          rm -rf github-pages
      - name: Build pages
        run: |
          REL=""
          for i in ${{ steps.fedora.outputs.releases }}; do
            REL="$REL -r $i"
          done
          if [ -z "$REL" ]; then
            echo "Unable to get supported releases for Fedora"
            exit 1
          fi
          [ ! -d json ] && mkdir json
          cd json
          for t in minimal; do
            echo fontquery -P fedora $REL -m json -t $t -f "{product}-{release}-{target}.{mode}"
            fontquery -P fedora $REL -m json -t $t -f "{product}-{release}-{target}.{mode}"
          done
          REL=""
          for i in ${{ steps.centos.outputs.releases }}; do
            REL="$REL -r $i"
          done
          if [ -z "$REL" ]; then
            echo "Unable to get supported releases for CentOS"
            exit 1
          fi
          for t in minimal; do
            echo fontquery -P centos $REL -m json -t $t -f "{product}-{release}-{target}.{mode}"
            fontquery -P centos $REL -m json -t $t -f "{product}-{release}-{target}.{mode}"
          done
          cd ..
          for f in json/*.json; do
            echo fq2html -t "{product} {release}: {target}" -R html -o ${f/.json/.html} $f
            fq2html -t "{product} {release}: {target}" -R html -o ${f/.json/-${{ steps.date.outputs.date }}.html} $f
          done
          mv json/*.html .
      - name: Add/Update JSON to git
        uses: EndBug/add-and-commit@v9
        id: commit
        with:
          add: json
          default_author: github_actions
          tag: '${{ steps.date.outputs.date }} --force'
      - name: Build index
        run: |
          cp README.templ README.md
          mkdir used
          echo "### Fedora" >> README.md
          echo "" >> README.md
          for i in ${{ steps.fedora.outputs.releases }}; do
            echo -n "* $i \[" >> README.md
            for f in $(ls -1t fedora-$i*.html|head -${{ env.KEEP_WEEK }}); do
              d=$(echo $f|sed -e 's/.*-\([0-9]*\).html/\1/')
              mv $f used
              echo -n "[$d](https://fedora-i18n.github.io/font-status/$f) " >> README.md
            done
            echo "\]" >> README.md
          done
          echo "" >> README.md
          echo "### CentOS" >> README.md
          echo "" >> README.md
          for i in ${{ steps.centos.outputs.releases }}; do
            echo -n "* $i \[" >> README.md
            for f in $(ls -1t centos-$i*.html|head -${{ env.KEEP_WEEK }}); do
              d=$(echo $f|sed -e 's/.*-\([0-9]*\).html/\1/')
              mv $f used
              echo -n "[$d](https://fedora-i18n.github.io/font-status/$f) " >> README.md
            done
            echo "\]" >> README.md
          done
          rm *-[0-9]*.html || :
          mv used/* .
          rmdir used
        if: ${{ steps.commit.outputs.committed == 'true' }}
      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: ${{ steps.commit.outputs.committed == 'true' }}
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        if: ${{ steps.commit.outputs.committed == 'true' }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          retention-days: 14
        if: ${{ steps.commit.outputs.committed == 'true' }}
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: ${{ steps.commit.outputs.committed == 'true' }}
